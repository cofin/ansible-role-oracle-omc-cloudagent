
# - name: Wait one second before proceeding.  Errors can happen when moving too quickly.
#   pause:
#     seconds: 2
- name: "identifying owner for {{ oracle_db.service_name }}"
  environment:
    ORACLE_DB: "{{ oracle_db.service_name }}"
  shell: |
    ps aux | grep pmon | grep -v grep | grep "$ORACLE_DB" | awk '{print $1}'
  register: oracle_db_sid_owner
# - name: "working with {{oracle_db.service_name}}"
#   debug:
#     msg: ""
- name: "-> no running database named {{ oracle_db.service_name }} was found"
  debug:
    msg: |
      "Running database process was not found for {{oracle_db.service_name}}.  Skipping deployment"
  when:
    - "(oracle_db_sid_owner.rc is defined and oracle_db_sid_owner.rc > 0) or (oracle_db_sid_owner.stdout is defined and oracle_db_sid_owner.stdout == '')"

- name: deploy user
  block:
    - name: "set database facts for {{ oracle_db.service_name }}"
      set_fact:
        oracle_db_owner: "{{oracle_db_sid_owner.stdout}}"
    - name: "deploy OMC monitoring user on {{ oracle_db.service_name }}"
      environment:
        ORACLE_DB: "{{oracle_db.service_name}}"
        ORAENV_ASK: "NO"
      shell: |
        export PATH=/usr/local/bin:$PATH
        export ORACLE_SID=$(cat /etc/oratab | grep -v "^#" | grep -v "N$" | grep "$ORACLE_DB" | head -1 | cut -f1 -d: -s)
        export ORACLE_HOME=$(cat /etc/oratab | grep -v "^#" | grep -v "N$" | grep "$ORACLE_DB" | head -1 | cut -f2 -d: -s)
        . /usr/local/bin/oraenv
        $ORACLE_HOME/bin/sqlplus -S / as sysdba @grantPrivileges.sql "{{ omc_cloudagent_db_user }}" "{{ omc_cloudagent_db_password }}" "Y"
      args:
        chdir: "{{ omc_cloudagent_stage_dir }}"
      register: user_deployment
      become: yes
      become_user: "{{oracle_db_owner}}"
      run_once: yes
      ignore_errors: yes
    # - name: "Successfully deployed the DB monitoring user to {{oracle_db.service_name}}"
    #   run_once: yes
    #   debug:
    #     msg: "{{user_deployment.stdout}}"
    #   when:
    #     - "user_deployment.rc is defined"
    #     - "user_deployment.rc == 0"
    #     - "'Resetting ORACLE_BASE to its previous value or ORACLE_HOME' not in user_deployment.stdout"
  when:
    - "oracle_db_sid_owner.rc is defined"
    - "oracle_db_sid_owner.rc == 0"
    - "oracle_db_sid_owner.stdout is defined"
    - "oracle_db_sid_owner.stdout != ''"
